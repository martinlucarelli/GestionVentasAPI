// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionVentasAPI.Migrations
{
    [DbContext(typeof(VentasContext))]
    [Migration("20241230185459_DatosSemillaDetalleVentas")]
    partial class DatosSemillaDetalleVentas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<Guid>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            idCategoria = new Guid("11111111-1111-1111-1111-111111111111"),
                            nombreCategoria = "Higiene personal"
                        },
                        new
                        {
                            idCategoria = new Guid("22222222-2222-2222-2222-222222222222"),
                            descripcion = "Articulos repeletes y antiplagas",
                            nombreCategoria = "Repelentes"
                        },
                        new
                        {
                            idCategoria = new Guid("33333333-3333-3333-3333-333333333333"),
                            nombreCategoria = "Limpieza"
                        });
                });

            modelBuilder.Entity("DetalleVenta", b =>
                {
                    b.Property<Guid>("idDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<Guid>("productoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ventaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idDetalleVenta");

                    b.HasIndex("productoId");

                    b.HasIndex("ventaId");

                    b.ToTable("DetalleVenta", (string)null);

                    b.HasData(
                        new
                        {
                            idDetalleVenta = new Guid("8c81f71e-8d65-4352-a341-252d4661e0c6"),
                            cantidad = 2,
                            productoId = new Guid("44444444-4444-4444-4444-444444444444"),
                            subtotal = 1600m,
                            ventaId = new Guid("77777777-7777-7777-7777-777777777777")
                        },
                        new
                        {
                            idDetalleVenta = new Guid("5b90d7e7-ac3d-406d-9123-ba234b3acde7"),
                            cantidad = 2,
                            productoId = new Guid("55555555-5555-5555-5555-555555555555"),
                            subtotal = 400m,
                            ventaId = new Guid("77777777-7777-7777-7777-777777777777")
                        },
                        new
                        {
                            idDetalleVenta = new Guid("e60f793a-0d18-4ebd-a74f-4ebcdbac55ce"),
                            cantidad = 2,
                            productoId = new Guid("66666666-6666-6666-6666-666666666666"),
                            subtotal = 1600m,
                            ventaId = new Guid("77777777-7777-7777-7777-777777777777")
                        },
                        new
                        {
                            idDetalleVenta = new Guid("c4b45d34-5fac-4682-8f64-1ee3c66ac118"),
                            cantidad = 3,
                            productoId = new Guid("44444444-4444-4444-4444-444444444444"),
                            subtotal = 2400m,
                            ventaId = new Guid("88888888-8888-8888-8888-888888888888")
                        },
                        new
                        {
                            idDetalleVenta = new Guid("e8946299-eb88-4d55-9306-293ed14e402b"),
                            cantidad = 2,
                            productoId = new Guid("66666666-6666-6666-6666-666666666666"),
                            subtotal = 4800m,
                            ventaId = new Guid("88888888-8888-8888-8888-888888888888")
                        });
                });

            modelBuilder.Entity("Producto", b =>
                {
                    b.Property<Guid>("idProdcuto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidadStock")
                        .HasColumnType("int");

                    b.Property<Guid>("categoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("idProdcuto");

                    b.HasIndex("categoriaId");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            idProdcuto = new Guid("44444444-4444-4444-4444-444444444444"),
                            cantidadStock = 80,
                            categoriaId = new Guid("11111111-1111-1111-1111-111111111111"),
                            nombreProducto = "Jabon",
                            precio = 800.0
                        },
                        new
                        {
                            idProdcuto = new Guid("55555555-5555-5555-5555-555555555555"),
                            cantidadStock = 150,
                            categoriaId = new Guid("22222222-2222-2222-2222-222222222222"),
                            nombreProducto = "Esprial",
                            precio = 200.0
                        },
                        new
                        {
                            idProdcuto = new Guid("66666666-6666-6666-6666-666666666666"),
                            cantidadStock = 34,
                            categoriaId = new Guid("33333333-3333-3333-3333-333333333333"),
                            nombreProducto = "Lavandina",
                            precio = 2400.0
                        });
                });

            modelBuilder.Entity("Venta", b =>
                {
                    b.Property<Guid>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idVenta");

                    b.ToTable("Venta", (string)null);
                });

            modelBuilder.Entity("DetalleVenta", b =>
                {
                    b.HasOne("Producto", "producto")
                        .WithMany("detalleVentas")
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venta", "venta")
                        .WithMany("detalleVentas")
                        .HasForeignKey("ventaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("Producto", b =>
                {
                    b.HasOne("Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("Producto", b =>
                {
                    b.Navigation("detalleVentas");
                });

            modelBuilder.Entity("Venta", b =>
                {
                    b.Navigation("detalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
